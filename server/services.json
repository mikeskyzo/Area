{
	"services" : [
		{
			"name" : "Discord",
			"check_token_function" : "check_token",
			"reactions" : [
				{
					"name" : "discord_send_message",
					"title" : "Send a message",
					"description" : "Send a message on a discord channel",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "send_message"
						},
						{
							"type" : "verify_arguments",
							"name" : "send_message_check_args"
						}
					],
					"params" : [
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						},
						{
							"name" : "username",
							"description" : "Username of the bot",
							"optional" : true
						},
						{
							"name" : "avatar",
							"description" : "Avatar's url of the bot",
							"optional" : true
						}
					]
				}
			]
		},
		{
			"name" : "Github",
			"check_token_function" : "check_token",
			"actions" : [
				{
					"name" : "github_new_push",
					"title" : "Repository push",
					"description" : "Trigger when someone push on a repo",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createWebhookPushOnRepo"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookPushOnRepo"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						}
					],
					"params" : [
						{
							"name" : "repository",
							"description" : "Name of the repository"
						},
						{
							"name" : "username",
							"description" : "Owner's name of the repository"
						}
					]
				},
				{
					"name" : "github_issue_event",
					"title" : "Repository issue event",
					"description" : "Trigger when a issue is update or created",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createWebhookIssueEvent"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookIssueEvent"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						}
					],
					"params" : [
						{
							"name" : "repository",
							"description" : "Name of the repository"
						},
						{
							"name" : "username",
							"description" : "Owner's name of the repository"
						}
					]
				}
			]
		},
		{
			"name" : "Reddit",
			"check_token_function" : "check_token",
			"actions" : [
			],
			"reactions" : [
				{
					"name": "Reddit_submit_url",
					"title": "submit an url to a subreddit",
					"description": "Use to send an url in a new post on a subreddit",
					"functions": [
						{
							"type": "execute_reaction",
							"name": "Reddit_Submit_Url"
						},
						{
							"type": "verify_arguments",
							"name": "Reddit_Submit_Url_CheckArgs"
						}
					],
					"params": [
						{
							"name": "subreddit",
							"description": "name of the subreddit"
						},
						{
							"name": "title",
							"description": "title of the post"
						},
						{
							"name": "url",
							"description": "url to post"
						}
					]
				},
				{
					"name": "Reddit_submit_post",
					"title": "submit a post to a subreddit",
					"description": "Use to create a new post on a subreddit",
					"functions": [
						{
							"type": "execute_reaction",
							"name": "Reddit_Submit_post"
						},
						{
							"type": "verify_arguments",
							"name": "Reddit_Submit_post_CheckArgs"
						}
					],
					"params": [
						{
							"name": "subreddit",
							"description": "name of the subreddit"
						},
						{
							"name": "title",
							"description": "title of the post"
						},
						{
							"name": "text",
							"description": "text to post"
						}
					]
				},
				{
					"name": "Reddit_create_post",
					"title": "submit subreddit creation request",
					"description": "Use to create a sub on reddit",
					"functions": [
						{
							"type": "execute_reaction",
							"name": "Reddit_create_sub"
						},
						{
							"type": "verify_arguments",
							"name": "Reddit_create_sub_CheckArgs"
						}
					],
					"params": [
						{
							"name": "name",
							"description": "name of the subreddit"
						},
						{
							"name": "title",
							"description": "title of the subreddit"
						},
						{
							"name": "description",
							"description": "description of the sub"
						},
						{
							"name": "Pdescription",
							"description": "public description of the sub"
						},
						{
							"name": "type",
							"description": "type of the sub"
						}
					]
				}
			]
		},
		{
			"name" : "Slack",
			"check_token_function" : "check_token",
			"reactions" : [
				{
					"name" : "slack_send_message",
					"title" : "Send a message",
					"description" : "Send a message on a slack channel",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "send_message"
						},
						{
							"type" : "verify_arguments",
							"name" : "send_message_check_args"
						}
					],
					"params" : [
						{
							"name" : "channel_id",
							"description" : "ID of the channel"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				}
			]
		},
		{
			"name" : "Trello",
			"check_token_function" : "CheckToken",
			"actions" : [
				{
					"name" : "create_new_webhook_trello_update_card",
					"title" : "Create Trello's webhook on updated card",
					"description" : "Trigger when there's an update on a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookUpdateCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_list",
					"title" : "Create Trello's webhook on a updated list",
					"description" : "Trigger when there's an update on a Trello's list.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_checklist",
					"title" : "Create Trello's webhook on a updated checklist",
					"description" : "Trigger when there's an update on a Trello's checklist.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_member",
					"title" : "Create Trello's webhook on a updated member",
					"description" : "Trigger when there's an update on a Trello's member.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_card",
					"title" : "Create Trello's webhook on a created card",
					"description" : "Trigger when there's an card created on a Trello's list.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_list",
					"title" : "Create Trello's webhook on a created list",
					"description" : "Trigger when there's a list created on a Trello's board.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_comment_card",
					"title" : "Create Trello's webhook on comments on card",
					"description" : "Trigger when there's a comment on a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_delete_card",
					"title" : "Create Trello's webhook on delete cards",
					"description" : "Trigger when there's a delete of a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_remove_checklist_from_card",
					"title" : "Create Trello's webhook when a checklist is removed from a card",
					"description" : "Trigger when there's a checklist removed from a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_remove_member_from_card",
					"title" : "Create Trello's webhook when a member is removed from a card",
					"description" : "Trigger when there's a member removed from a Trello's card..",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_board",
					"title" : "Create Trello's webhook for board creation",
					"description" : "Trigger when there's an board created by a Trello's member.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_add_checklist_to_card",
					"title" : "Create Trello's webhook for add checklist to card event",
					"description" : "Trigger when there's a checklist added to a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_add_attachment_to_card",
					"title" : "Create Trello's webhook for add of attachment to a card",
					"description" : "Trigger when there's attachment added to a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhook"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				}
			],
			"reactions" : [
				{
					"name" : "trelloCreateCard",
					"title" : "Create card",
					"description" : "Create a Trello's card.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateCard"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateCard"
						}
					],
					"params" : [
						{
							"name" : "IDList",
							"description" : "ID of the list to add the card"
						},
						{
							"name" : "name",
							"description" : "Name of the card to add"
						},
						{
							"name" : "description",
							"description" : "Description of the card to add"
						}
					]
				},
				{
					"name" : "trelloCreateList",
					"title" : "Create a board",
					"description" : "Create a Trello's list.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateList"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateList"
						}
					],
					"params" : [
						{
							"name" : "IDBoard",
							"description" : "ID of the board to add the card"
						},
						{
							"name" : "name",
							"description" : "Name of the list to add"
						}
					]
				},
				{
					"name" : "trelloCreateLabel",
					"title" : "Create a Trello's label",
					"description" : "Create a Trello's label.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateLabel"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateLabel"
						}
					],
					"params" : [
						{
							"name" : "IDBoard",
							"description" : "ID of the board to add the label"
						},
						{
							"name" : "name",
							"description" : "Name of the label to add"
						}
					]
				},
				{
					"name" : "trelloCreateBoard",
					"title" : "Create a Trello's board",
					"description" : "Create a Trello's board.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateBoard"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateBoard"
						}
					],
					"params" : [
						{
							"name" : "name",
							"description" : "Name of the label to add"
						},
						{
							"name" : "description",
							"description" : "ID of the board to add the label"
						}
					]
				}
			]
		},
		{
		"name" : "Twitch",
		"check_token_function" : "NULL",
		"actions" : [
			{
				"name" : "Twitch_new_user",
				"title" : "new follow from a user",
				"description" : "Trigger when someone follow a user",
				"functions" : [
					{
						"type" : "create_action",
						"name" : "Twitch_Create_Webhook_NewSubscriber"
					},
					{
						"type" : "format_result",
						"name" : "FormatWebhookPushOnRepo"
					},
					{
						"type" : "delete_action",
						"name" : "Twitch_Delete_Webhook_NewSubscriber"
					}
				],
				"params" : [
					{
						"name" : "login",
						"description" : "login of the twitch user to follow"
					}

				]
			},
			{
				"name" : "Twitch_streams_change_state",
				"title" : "Streams goes offline/online",
				"description" : "Trigger when a twitch channel change states",
				"functions" : [
					{
						"type" : "create_action",
						"name" : "Twitch_Create_Webhook_StreamChangeState"
					},
					{
						"type" : "format_result",
						"name" : "FormatWebhookIssueEvent"
					},
					{
						"type" : "delete_action",
						"name" : "Twitch_Delete_Webhook_StreamChangeState"
					}
				],
				"params" : [
					{
						"name" : "login",
						"description" : "login of the twitch user to follow"
					}
				]
			},
			{
				"type" : "confirm_webhook_function",
				"name" : "confirmWebhookFunctionTwitch"
			}
		],
		"reactions" : [
		]
		}
	]
}