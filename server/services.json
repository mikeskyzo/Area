{
	"services" : [
		{
			"name" : "Discord",
			"is_service_active" : "is_service_active",
			"generate_url_function" : "generate_url",
			"redirect_auth_function" : "redirect_auth",
			"reactions" : [
				{
					"name" : "discord_send_message",
					"title" : "Send a message",
					"description" : "Send a message on a discord channel",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "send_message"
						},
						{
							"type" : "verify_arguments",
							"name" : "send_message_check_args"
						}
					],
					"params" : [
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						},
						{
							"name" : "username",
							"description" : "Username of the bot",
							"optional" : true
						},
						{
							"name" : "avatar",
							"description" : "Avatar's url of the bot",
							"optional" : true
						}
					]
				}
			]
		},
		{
			"name" : "Github",
			"is_service_active" : "is_service_active",
			"generate_url_function" : "generate_url",
			"redirect_auth_function" : "redirect_auth",
			"actions" : [
				{
					"name" : "github_new_push",
					"title" : "Repository push",
					"description" : "Trigger when someone push on a repo",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createWebhookPushOnRepo"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookPushOnRepo"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						}
					],
					"params" : [
						{
							"name" : "repository",
							"description" : "Name of the repository"
						},
						{
							"name" : "username",
							"description" : "Owner's name of the repository"
						}
					]
				},
				{
					"name" : "github_issue_event",
					"title" : "Repository issue event",
					"description" : "Trigger when a issue is update or created",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createWebhookIssueEvent"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookIssueEvent"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						}
					],
					"params" : [
						{
							"name" : "repository",
							"description" : "Name of the repository"
						},
						{
							"name" : "username",
							"description" : "Owner's name of the repository"
						}
					]
				}
			]
		},
		{
			"name": "Reddit",
			"is_service_active": "is_service_active",
			"generate_url_function": "generateUrl",
			"redirect_auth_function": "redirectAuth",
			"actions" : [
			],
			"reactions" : [
				{
					"name": "postInSubreddit",
					"title": "Post in a subreddit",
					"description": "Create a new post in a subreddit",
					"functions": [
						{
							"type": "execute_reaction",
							"name": "postInSubreddit"
						},
						{
							"type": "verify_arguments",
							"name": "postInSubredditCheck"
						}
					],
					"params": [
						{
							"name": "subReddit",
							"description": "Title of the sub reddit"
						},
						{
							"name": "title",
							"description": "Title of the new post"
						},
						{
							"name": "text",
							"description": "Text of the new post"
						}
					]
				},
				{
					"name": "composePrivateMessage",
					"title": "Post in a subreddit",
					"description": "Create a new post in a subreddit",
					"functions": [
						{
							"type": "execute_reaction",
							"name": "postInSubreddit"
						},
						{
							"type": "verify_arguments",
							"name": "postInSubredditCheck"
						}
					],
					"params": [
						{
							"name": "subReddit",
							"description": "Title of the sub reddit"
						},
						{
							"name": "title",
							"description": "Title of the new post"
						},
						{
							"name": "text",
							"description": "Text of the new post"
						}
					]
				}
			]
		},
		{
			"name" : "Slack",
			"check_token_function" : "check_token",
			"reactions" : [
				{
					"name" : "slack_send_message",
					"title" : "Send a message",
					"description" : "Send a message on a slack channel",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "send_message"
						},
						{
							"type" : "verify_arguments",
							"name" : "send_message_check_args"
						}
					],
					"params" : [
						{
							"name" : "channel_id",
							"description" : "ID of the channel"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				}
			]
		},
		{
			"name" : "Trello",
			"is_service_active" : "is_service_active",
			"generate_url_function" : "generate_url",
			"redirect_auth_function" : "redirect_auth",
			"check_token_function" : "CheckToken",
			"actions" : [
				{
					"name" : "create_new_webhook_trello_update_card",
					"title" : "Create Trello's webhook on updated card",
					"description" : "Trigger when there's an update on a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookUpdateCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_list",
					"title" : "Create Trello's webhook on a updated list",
					"description" : "Trigger when there's an update on a Trello's list.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookUpdateList"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_checklist",
					"title" : "Create Trello's webhook on a updated checklist",
					"description" : "Trigger when there's an update on a Trello's checklist.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookUpdateChecklist"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						},
						{
							"name" : "event",
							"description" : "Event wanted to trigger"
						},
						{
							"name" : "message",
							"description" : "Message to send on the channel"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_update_member",
					"title" : "Create Trello's webhook on a updated member",
					"description" : "Trigger when there's an update on a Trello's member.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookUpdateMember"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_card",
					"title" : "Create Trello's webhook on a created card",
					"description" : "Trigger when there's an card created on a Trello's list.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookCreateCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_list",
					"title" : "Create Trello's webhook on a created list",
					"description" : "Trigger when there's a list created on a Trello's board.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookCreateList"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_comment_card",
					"title" : "Create Trello's webhook on comments on card",
					"description" : "Trigger when there's a comment on a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookCommentCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_delete_card",
					"title" : "Create Trello's webhook on delete cards",
					"description" : "Trigger when there's a delete of a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookDeleteCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_remove_checklist_from_card",
					"title" : "Create Trello's webhook when a checklist is removed from a card",
					"description" : "Trigger when there's a checklist removed from a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookRemoveChecklistFromCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_remove_member_from_card",
					"title" : "Create Trello's webhook when a member is removed from a card",
					"description" : "Trigger when there's a member removed from a Trello's card..",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookRemoveMemberFromCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_create_board",
					"title" : "Create Trello's webhook for board creation",
					"description" : "Trigger when there's an board created by a Trello's member.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookCreateBoard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_add_checklist_to_card",
					"title" : "Create Trello's webhook for add checklist to card event",
					"description" : "Trigger when there's a checklist added to a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookAddChecklistToCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				},
				{
					"name" : "create_new_webhook_trello_add_attachment_to_card",
					"title" : "Create Trello's webhook for add of attachment to a card",
					"description" : "Trigger when there's attachment added to a Trello's card.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "createNewWebhookAddAttachmentToCard"
						},
						{
							"type" : "format_result",
							"name" : "FormatWebhookUpdateModel"
						},
						{
							"type" : "delete_action",
							"name" : "deleteWebhook"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTrello"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of a Trello's model (board, card, list, member, ...)"
						}
					]
				}
			],
			"reactions" : [
				{
					"name" : "trelloCreateCard",
					"title" : "Create card",
					"description" : "Create a Trello's card.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateCard"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateCard"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of the list to add the card"
						},
						{
							"name" : "name",
							"description" : "Name of the card to add"
						},
						{
							"name" : "description",
							"description" : "Description of the card to add"
						}
					]
				},
				{
					"name" : "trelloCreateList",
					"title" : "Create a board",
					"description" : "Create a Trello's list.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateList"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateList"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of the board to add the card"
						},
						{
							"name" : "name",
							"description" : "Name of the list to add"
						}
					]
				},
				{
					"name" : "trelloCreateLabel",
					"title" : "Create a Trello's label",
					"description" : "Create a Trello's label.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateLabel"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateLabel"
						}
					],
					"params" : [
						{
							"name" : "idModel",
							"description" : "ID of the board to add the label"
						},
						{
							"name" : "name",
							"description" : "Name of the label to add"
						}
					]
				},
				{
					"name" : "trelloCreateBoard",
					"title" : "Create a Trello's board",
					"description" : "Create a Trello's board.",
					"functions" : [
						{
							"type" : "execute_reaction",
							"name" : "trelloCreateBoard"
						},
						{
							"type" : "verify_arguments",
							"name" : "checkArgsCreateBoard"
						}
					],
					"params" : [
						{
							"name" : "name",
							"description" : "Name of the label to add"
						},
						{
							"name" : "description",
							"description" : "Description of the board"
						}
					]
				}
			]
		},
		{
			"name" : "Twitch",
			"is_service_active" : "is_service_active",
			"check_token_function" : "CheckToken",
			"actions" : [
				{
					"name" : "Twitch_Create_Webhook_New_Subscriber",
					"title" : "Create Twitch newSuscriber webhook",
					"description" : "Trigger when there's a new follower to the given login.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "Twitch_Create_Webhook_NewSubscriber"
						},
						{
							"type" : "format_result",
							"name" : "Twitch_Create_Webhook_NewSubscriber_FM"
						},
						{
							"type" : "delete_action",
							"name" : "Twitch_Delete_Webhook_NewSubscriber"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTwitch"
						}
					],
					"params" : [
						{
							"name" : "login",
							"description" : "login of the twitch channel"
						}
					]
				},
				{
					"name" : "Twitch_Create_Webhook_Stream_ChangeState",
					"title" : "Create Twitch changeState webhook",
					"description" : "Trigger when the given login change his stream state.",
					"functions" : [
						{
							"type" : "create_action",
							"name" : "Twitch_Create_Webhook_StreamChangeState"
						},
						{
							"type" : "format_result",
							"name" : "Twitch_Create_Webhook_StreamChangeState_FM"
						},
						{
							"type" : "delete_action",
							"name" : "Twitch_Delete_Webhook_StreamChangeState"
						},
						{
							"type" : "confirm_webhook_function",
							"name" : "confirmWebhookFunctionTwitch"
						}
					],
					"params" : [
						{
							"name" : "login",
							"description" : "login of the twitch channel"
						}
					]
				}
			]
		}
	]
}